
  ---
  
  const images = [
    {
      image: '/assets/aws.png',
    },
    {
      image: '/assets/genesys.png',
    }    ,
    {
      image: '/assets/microsoft.png',
    },
    {
      image: '/assets/Deutsche.png',
    },
    {
      image: '/assets/monzo.png',
    },
    {
      image: '/assets/stripe.png',
    },
    {
      image: '/assets/cloudanalogy.png',
    },
    {
      image:'/assets/twilio.png',
    },
    {
      image:'/assets/adobe2.png',
    },
    {
      image:'/assets/cxguru2.avif',
    }
  ];
  const repetitions = 4;
  ---
  
  <div class="marquee-container">
    <p class="ps-4 lg:ps-20 font-semibold">Trusted by:</p>
    <div class="marquee" id="marquee">
      
      {[...Array(repetitions)].map(() => (
        <div class="marquee-content">
          {images.map((image) => (
            <div class="word-container text-black">
              <img src={image.image} alt="Marquee Image" />
              <svg class="arrow" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M10 19l-7-7m0 0l7-7m-7 7h18" />
              </svg>
            </div>
          ))}
        </div>
      ))}
    </div>
  </div>
  
  <script>
    import { gsap } from 'gsap';
  
    const marquee = document.getElementById('marquee');
    const arrows = document.querySelectorAll('.arrow');
    const marqueeContent = document.querySelector('.marquee-content');
    const repetitions = 4; // Number of times to repeat the word set
  
    if (marquee && marqueeContent) {
      const contentWidth = (marqueeContent as HTMLElement).offsetWidth; // Type assertion added
      const totalWidth = contentWidth * Number(repetitions); // Ensure repetitions is a number
  
      gsap.set(marquee, { x: 0 });
  
      const tl = gsap.timeline({ repeat: -1 });
      tl.to(marquee, {
        x: -contentWidth,
        duration: 12,
        ease: 'linear',
        onComplete: () => {
          gsap.set(marquee, { x: 0 });
        }
      });
  
      marquee.addEventListener('mouseenter', () => {
        gsap.to(arrows, {
          rotation: 180,
          duration: 0.3,
          ease: 'power2.out',
        });
      });
  
      marquee.addEventListener('mouseleave', () => {
        gsap.to(arrows, {
          rotation: 0,
          duration: 0.3,
          ease: 'power2.out',
        });
      });
    }
  </script>
  
  <style>
    .marquee-container {
      overflow: hidden;
      background-color: #E7E7D6;
      padding: 0.5rem 0;
      font-family: 'new';
      font-weight: 800;
      font-stretch: 450%;
      height: 22rem;
      position: relative;
    }
  
    .marquee-container::before,
    .marquee-container::after {
      content: "";
      position: absolute;
      top: 0;
      width: 25%;
      height: 100%;
      z-index: 2;
      pointer-events: none;
    }
  
    .marquee-container::before {
      left: 0;
      background: linear-gradient(to right, #E7E7D6 0%, transparent 100%);
    }
  
    .marquee-container::after {
      right: 0;
      background: linear-gradient(to left, #E7E7D6 0%, transparent 100%);
    }
  
    .marquee {
      display: flex;
      align-items: center;
      white-space: nowrap;
      height: 100%;
    }
  
    .marquee-content {
      display: flex;
      color: white;
    }
  
    .word-container {
      display: flex;
      align-items: center;
      margin: 0 3rem;
      font-size: 1.5rem;
      font-weight: bold;
    }
  
    .word-container img {
      width: auto;
      height: 5rem;
      object-fit: contain;
    }
  
    .arrow {
      width: 4rem;
      height: 0rem;
      /* margin-left: 0.5rem; */
    }
  </style>

