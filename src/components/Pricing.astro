---
import * as Icons from "@astropub/icons"

const basicFeatures = {
    "Voyage": {
        heading: "Advanced Voyage Features",
        stats_description: "Uptime guarantee with our enterprise-grade security infrastructure",
        features: [
            "On premise Contact Center Platforms configuration discovery ​",
            "Automatic call center Telephony object discovery ​",
            "Inbuilt support for legacy Genesys Engage (on-premise) objects​",
            "Discovery of on-premise call flows and routing flows( vxml and scxml support) ​",
            "Call flow summarization for each legacy composer projects ​",
            "Bulk flow uploads directly to cloud​",
            "Call and workflow comparison, call flow journey mapping ​",
            "Prompt transcribe and verbiage management ​",
            "Prompt migration from legacy to Genesys cloud​",
            "Subscription plan management ​",
            "Online secure billing subscriptions via Stripe​",
            "Services uptime status and monitoring​",
            "Compliance Settings and controls​",
            "System Logging​",
            "Integration with applications​",
            "Roles for granular permissions​",
            "User Profile Configuration ​",
            "Support services​",
            "Admin Reporting​",
            "Notification Control​",
            "24 x 7 support ticket, Monitoring"
        ]
    },
    "Nexa": {
        heading: "Seamless Integration Tools",
        stats_description: "Faster deployment time compared to traditional integration methods",
        features: [
            "Bulk and automated management of objects in Genesys cloud ​",
            "Support for User, Role, Division, Queue, Skills and many more critical objects​",
            "Management of Language, Call Routing, Emergency Groups, Schedule Management, Production Prompts, ​",
            "Additional features include secure role-based access, End to end encryption, Admin dashboard, AD Authentication​",
            "Inbuilt support for SSO, MFA, AD, User Configuration and Activity reporting, ​",
            "GDPR compliant​",
            "Platform Uptime status and monitoring, ​",
            "Dashboard and reporting, Nexa workspace Management​",
            "Help documentation​",
            "Subscription plan management ​",
            "Online secure billing subscriptions via Stripe​",
            "Services uptime status and monitoring​",
            "Compliance Settings and controls​",
            "System Logging​",
            "Integration with applications​",
            "Roles for granular permissions​",
            "User Profile Configuration ​",
            "Support services​",
            "Admin Reporting​",
            "Notification Control​",
        ]
    },
    // "Support": {
    //     heading: "Premium Support Access",
    //     description: "24/7 dedicated support for your business needs",
    //     features: [
    //         "24/7 priority support",
    //         "Dedicated account manager",
    //         "Training sessions",
    //         "Implementation assistance"
    //     ]
    // },
    // "Custom": {
    //     heading: "Custom Solutions",
    //     description: "Tailored solutions for unique business needs",
    //     features: [
    //         "Custom integrations",
    //         "Custom reporting",
    //         "Custom workflows",
    //         "Advanced user management"
    //     ]
    // }
}

const cxp2Points = [
    "On premise Contact Center Platforms configuration discovery ​",
    "Automatic call center Telephony object discovery ​",
    "Inbuilt support for legacy Genesys Engage (on-premise) objects​",
    "Discovery of on-premise call flows and routing flows( vxml and scxml support) ​",
    "Call flow summarization for each legacy composer projects ​",
    "Bulk flow uploads directly to cloud​",
    "Call and workflow comparison, call flow journey mapping ​",
    "Prompt transcribe and verbiage management ​",
    "Prompt migration from legacy to Genesys cloud",
    "Bulk and automated management of objects in Genesys cloud ​",
    "Support for User, Role, Division, Queue, Skills and many more critical objects​",
    "Management of Language, Call Routing, Emergency Groups, Schedule Management, Production Prompts, ​",
    "Additional features include secure role-based access, End to end encryption, Admin dashboard, AD Authentication​",
    "Inbuilt support for SSO, MFA, AD, User Configuration and Activity reporting, ​",
    "GDPR compliant​",
    "Platform Uptime status and monitoring, ​",
    "dashboard and reporting, Nexa workspace Management​",
    "Help documentation",
    "Subscription plan management",
    "Online secure billing subscriptions via Stripe​",
    "Services uptime status and monitoring​",
    "Compliance Settings and controls​",
    "System Logging​",
    "Integration with applications​",
    "Roles for granular permissions​",
    "User Profile Configuration ​",
    "Support services​",
    "Admin Reporting​",
    "Notification Control​",
    "24 x 7 support ticket, Monitoring",
]



// const proFeatures = {
//     "Enterprise": {
//         heading: "Enterprise Solutions",
//         stats: "200%",
//         stats_description: "Average ROI for enterprise clients within first year",
//         features: [
//             "Custom deployment options",
//             "Advanced analytics",
//             "SLA guarantees",
//             "Dedicated infrastructure"
//         ]
//     },
//     "Compliance": {
//         heading: "Compliance & Security",
//         stats: "100%",
//         stats_description: "Compliance rate with industry standards and regulations",
//         features: [
//             "HIPAA compliance",
//             "SOC 2 certification",
//             "Custom audit logs",
//             "Data retention policies"
//         ]
//     },
//     "Advanced": {
//         heading: "Advanced Features",
//         stats: "75%",
//         stats_description: "Reduction in manual workflow processes",
//         features: [
//             "AI-powered insights",
//             "Custom reporting",
//             "Workflow automation",
//             "Advanced user management"
//         ]
//     },
    
// }

const serializedBasicFeatures = JSON.stringify(basicFeatures);
// const serializedProFeatures = JSON.stringify(proFeatures);
---

<div class="w-screen h-full bg-[#E7E7D6] my-24">
    <p class="text-center lg:text-start font-new w-full stretch font-bold text-[2rem] md:px-16  xl:px-24 px-6 mb-10 leading-[100%]">
        Our Standard Pricing 
    </p>
    <div class="w-full flex flex-wrap justify-center gap-6 px-4 md:px-2 py-12">
        <div class="w-full flex flex-col md:flex-row items-stretch justify-center gap-2 ">
            
            <div class="w-[100%] md:w-[28%] h-fit lg:h-[1600px] bg-white rounded-[3rem] p-6 md:p-10 border-2 border-gray-200 flex flex-col">
                <p class="font-new stretch text-[2rem] font-semibold">Free Trial</p>
                <div class="h-full flex flex-col items-center gap-12 py-8">
                    <div class="flex flex-col items-center justify-center ">
                        <p class="font-bold text-[2rem] text-black text-center">Free Trial </p>
                        <p class="font-semibold text-[1rem] text-black/60 text-center">07 day free Trial per User</p>
                    </div>
                    <button class=" py-3 px-6 bg-black text-white rounded-[2rem]">Start Free Trial</button>
                    <!-- <ul class="flex flex-col items-start justify-center gap-6">
                        <li class="font-black text-[1rem] text-black/60 leading-none flex items-center gap-2">
                            <div class="w-2 h-2 rounded-full bg-black"></div>
                            <span class="font-medium">AD based Authentication</span>
                        </li>
                        <li class="font-black text-[1rem] text-black/60 leading-none flex items-center gap-2">
                            <div class="w-2 h-2 rounded-full bg-black"></div>
                            <span class="font-medium">GDPR compliant</span>
                        </li>
                        <li class="font-black text-[1rem] text-black/60 leading-none flex items-center gap-2">
                            <div class="w-2 h-2 rounded-full bg-black"></div>
                            <span class="font-medium">Leading contact centers</span>
                        </li>
                        <li class="font-black text-[1rem] text-black/60 leading-none flex items-center gap-2">
                            <div class="w-2 h-2 rounded-full bg-black"></div>
                            <span class="font-medium">Role based access</span>
                        </li>
                        <li class="font-black text-[1rem] text-black/60 leading-none flex items-center gap-2">
                            <div class="w-2 h-2 rounded-full bg-black"></div>
                            <span class="font-medium">End to end encryption</span>
                        </li>
                        <li class="font-black text-[1rem] text-black/60 leading-none flex items-center gap-2">
                            <div class="w-2 h-2 rounded-full bg-black"></div>
                            <span class="font-medium">Raise support ticket</span>
                        </li>
                        <li class="font-black text-[1rem] text-black/60 leading-none flex items-center gap-2">
                            <div class="w-2 h-2 rounded-full bg-black"></div>
                            <span class="font-medium">Platform status, monitoring</span>
                        </li>
                    </ul> -->
                    <div class="w-full space-y-6">
                        <select class="feature-selector w-full bg-gray-200/80 p-4 rounded-2xl font-semibold cursor-pointer outline-none">
                            {Object.keys(basicFeatures).map((category) => (
                                <option value={category}>{category}</option>
                            ))}
                        </select>

                        <div class="feature-display rounded-xl">
                            <ul class="space-y-3 feature-list" id="basicFeatureList">
                                {basicFeatures["Voyage"].features.map(feature => (
                                    <li class="text-sm text-black flex items-center gap-2">
                                        <div class="w-2 h-2 rounded-full bg-black"></div>
                                        <span>{feature}</span>
                                    </li>
                                ))}
                            </ul>
                        </div>
                    </div>
                    
                    <!-- Add new trial details section -->
                    <div class="w-full mt-auto pt-8 border-t border-gray-200">
                        <p class="text-md text-black font-semibold mb-3">Free Trial includes 07 days free access</p>
                        <p class="text-md text-black font-semibold mb-3">2 users' activation</p>
                        <p class="text-md text-black font-semibold mb-3">API rate limits and restrictions may apply during Free Trial *</p>
                        <p class="text-md text-black font-semibold">One time product activation fee will only be applicable upon activation of monthly subscription</p>
                    </div>
                </div>
            </div>

            <div class="w-[100%] md:w-[28%] h-fit lg:h-[1600px] bg-[#ff6d00] rounded-[3rem] p-6 md:p-10 flex flex-col">
                <p class="font-new stretch text-[2rem] font-semibold">CXP1</p>
                <div class="h-full flex flex-col items-center gap-12 py-8">
                    <div class="flex flex-col items-center justify-center ">
                        <p class="font-bold text-[0.8rem] text-black/50 text-center"><span class="text-[2rem] text-black">$ 2.5</span> per user / per day</p>
                        <p class="font-semibold text-[1rem] text-black/60 text-center">Start 10 user license</p>
                    </div>
                    <button class=" py-3 px-6 bg-black text-white rounded-[2rem]">Select Plan</button>
                    <div class="w-full space-y-6">
                        <select class="feature-selector w-full bg-white/50 p-4 rounded-2xl font-semibold cursor-pointer outline-none">
                            {Object.keys(basicFeatures).map((category) => (
                                <option value={category}>{category}</option>
                            ))}
                        </select>

                        <div class="feature-display rounded-xl">
                            <ul class="space-y-3 feature-list" id="basicFeatureList">
                                {basicFeatures["Voyage"].features.map(feature => (
                                    <li class="text-sm text-black flex items-center gap-2">
                                        <div class="w-2 h-2 rounded-full bg-black"></div>
                                        <span>{feature}</span>
                                    </li>
                                ))}
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <div class="w-[100%] md:w-[28%] h-fit lg:h-[1600px] bg-[#FF6D00] rounded-[3rem] p-6 md:p-10 flex flex-col">
                <p class="font-new stretch text-[2rem] font-semibold">CXP2</p>
                <div class="h-full flex flex-col items-center gap-12 py-8">
                    <div class="flex flex-col items-center justify-center ">
                        <p class="font-bold text-[0.8rem] text-black/50 text-center"><span class="text-[2rem] text-black">$ 4.5</span>per user / per day</p>
                        <p class="font-semibold text-[1rem] text-black/60 text-center">Start 15 user license</p>
                    </div>
                    <button class=" py-3 px-6 bg-black text-white rounded-[2rem]">Select Plan</button>
                    <div class="w-full space-y-8">
                        <ul class="space-y-3">
                            {cxp2Points.map(point => (
                                <li class="text-sm text-black/70 flex items-center gap-2">
                                    <div class="w-2 h-2 rounded-full bg-black"></div>
                                    <span>{point}</span>
                                </li>
                            ))}
                        </ul>
                    </div>
                </div>
            </div>

            <!-- <div class="w-[100%] md:w-[22%] h-fit lg:h-[1080px] bg-[#FF6D00] rounded-[3rem] p-6 md:p-10 flex flex-col">
                <p class="font-new stretch text-[2rem] font-semibold">CXP3</p>
                <div class="h-full flex flex-col items-center gap-12 py-8">
                    <div class="flex flex-col items-center justify-center">
                        <p class="font-bold text-[0.8rem] text-black/50 text-center"><span class="text-[2rem] text-black">$90</span>/month/user</p>
                        <p class="font-semibold text-[1rem] text-black/60 text-center">Start 10 user license</p>
                    </div>
                    <button class="py-3 px-6 bg-black text-white rounded-[2rem]">Select Plan</button>
                    <div class="w-full space-y-8">
                        {Object.entries(proFeatures).slice(0, 3).map(([category, featureSet]) => (
                            <div class="space-y-4">
                                <h3 class="font-semibold text-lg">{featureSet.heading}</h3>
                                <p class="text-sm text-black/60 mb-4">{featureSet.stats_description}</p>
                                <ul class="space-y-3">
                                    {featureSet.features.map(feature => (
                                        <li class="text-sm text-black/70 flex items-center gap-2">
                                            <div class="w-2 h-2 rounded-full bg-black"></div>
                                            <span>{feature}</span>
                                        </li>
                                    ))}
                                </ul>
                            </div>
                        ))}
                    </div>
                </div>
            </div> -->
        </div>

        <div class="w-[100%] md:w-[84%] bg-white rounded-[3rem] p-8 md:p-16 flex flex-col items-start justify-between gap-8">
            <div class="md:w-2/3]">
                <p class="font-new stretch text-[2rem] font-semibold leading-none mb-8">Need Assistance? let's discuss your options</p>
                <p class="font-semibold text-[1rem] text-black/60">We're here to help you every step of the way. Whether you're looking for guidance, need assistance, or want to explore your options, we're ready to support you every step of the way. If you're unsure which package is right for you or need something different, we're here to help.</p>
            </div>
            <div class="md:w-1/3 flex flex-col items-start justify-center gap-8">
                <a 
                    href="/termsofservice" 
                    class="font-bold text-[1rem] text-black flex items-center justify-end gap-2 hover:text-black/70 transition-all duration-300"
                >
                    FAQ and terms <span><Icons.ArrowRight size={20}/></span>
                </a>
                <a 
                    href="/company/#form" 
                    class="py-3 px-6 bg-black text-white rounded-[2rem] cursor-pointer hover:bg-black/80 transition-all duration-300 inline-block"
                >
                    Contact US
                </a>
            </div>
        </div>
    </div>
</div>

<script define:vars={{ serializedBasicFeatures }}>
    const basicFeatures = JSON.parse(serializedBasicFeatures);
    
    document.addEventListener('DOMContentLoaded', () => {
        // Basic features selector logic
        const basicSelectors = document.querySelectorAll('.feature-selector');
        
        basicSelectors.forEach(selector => {
            selector.addEventListener('change', (e) => {
                const selectedCategory = e.target.value;
                const featureList = e.target.closest('div').querySelector('.feature-list');
                const selectedFeatureSet = basicFeatures[selectedCategory];

                if (selectedFeatureSet && featureList) {
                    // Clear existing features
                    featureList.innerHTML = '';
                    
                    // Add heading and description
                    const header = document.createElement('div');
                    header.className = 'mb-4';
                    header.innerHTML = `
                        <h3 class="font-semibold text-lg mb-2">${selectedFeatureSet.heading}</h3>
                        <p class="text-sm text-black/60 mb-4">${selectedFeatureSet.stats_description}</p>
                    `;
                    featureList.appendChild(header);
                    
                    // Add features
                    selectedFeatureSet.features.forEach(feature => {
                        const li = document.createElement('li');
                        li.className = 'text-sm text-black flex items-center gap-2';
                        li.innerHTML = `
                            <div class="w-2 h-2 rounded-full bg-black"></div>
                            <span>${feature}</span>
                        `;
                        featureList.appendChild(li);
                    });
                }
            });

            // Initialize with first option
            selector.dispatchEvent(new Event('change'));
        });

        // Pro features selector logic
        const proSelectors = document.querySelectorAll('.feature-selector-pro');
        
        proSelectors.forEach((selector, index) => {
            selector.addEventListener('change', (e) => {
                const selectedCategory = e.target.value;
                const featureList = e.target.closest('.space-y-6').querySelector('.feature-list-pro');
                const selectedFeatureSet = proFeatures[selectedCategory];

                if (selectedFeatureSet) {
                    // Clear existing features
                    featureList.innerHTML = '';
                    
                    // Add heading and stats
                    const header = document.createElement('div');
                    header.className = 'mb-4';
                    header.innerHTML = `
                        <h3 class="font-semibold text-lg mb-2">${selectedFeatureSet.heading}</h3>
                        <p class="text-sm text-black/60 mb-4">${selectedFeatureSet.stats_description}</p>
                    `;
                    featureList.appendChild(header);
                    
                    // Add features with icons
                    selectedFeatureSet.features.forEach(feature => {
                        const li = document.createElement('li');
                        li.className = 'text-sm text-black/70 flex items-center gap-2';
                        li.innerHTML = `
                            <div class="w-2 h-2 rounded-full bg-black"></div>
                            <span>${feature}</span>
                        `;
                        featureList.appendChild(li);
                    });

                    // Add fade animation
                    featureList.classList.add('fade-in');
                    setTimeout(() => featureList.classList.remove('fade-in'), 300);
                }
            });

            // Set different initial values for each dropdown
            const featureKeys = Object.keys(proFeatures);
            selector.value = featureKeys[index % featureKeys.length];
            selector.dispatchEvent(new Event('change'));
        });
    });
</script>

<style>
    .font-new{
        font-family: 'new';
    }

    .stretch{
        font-stretch: 500%;
    }

    /* Smooth transitions for dropdowns */
    .dropdown-content {
        transition: all 0.3s ease-in-out;
    }

    .dropdown-trigger svg {
        transition: transform 0.3s ease;
    }

    .feature-selector {
        transition: all 0.2s ease;
    }
    
    .feature-selector:hover {
        background-color: rgba(255, 255, 255, 0.6);
    }
    
    .feature-display {
        transition: all 0.3s ease;
    }

    /* Enhanced dropdown styling */
    .feature-selector, .feature-selector-pro {
        appearance: none;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='currentColor'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M19 9l-7 7-7-7'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: right 1.5rem center;
        background-size: 1rem;
        padding: 1rem 3.5rem 1rem 1.5rem;
    }

    .feature-selector:hover, .feature-selector-pro:hover {
        background-color: rgba(255, 255, 255, 0.6);
    }

    @keyframes fade-in {
        from {
            opacity: 0;
            transform: translateY(5px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .fade-in {
        animation: fade-in 0.3s ease-out;
    }

    .feature-list li {
        transition: all 0.2s ease;
    }

    .tool-section {
        border-radius: 1rem;
        transition: all 0.3s ease;
    }


    /* Add responsive styles */
    @media (max-width: 768px) {
        .feature-selector {
            width: 100%;
            max-width: none;
        }

        .tool-section {
            padding: 1rem;
        }
    }
</style>